{"version":3,"sources":["./src/app/components/admin/admin-inicio/admin-inicio.component.ts","./src/app/components/admin/admin-inicio/admin-inicio.component.html","./src/app/models/usuario.model.ts","./src/app/components/admin/admin-inicio/configuracion/configuracion.component.ts","./src/app/components/admin/admin-inicio/configuracion/configuracion.component.html","./src/app/components/publico/inicio/ver-menu-categoria/ver-menu-categoria.component.html","./src/app/components/publico/inicio/ver-menu-categoria/ver-menu-categoria.component.ts","./src/app/helpers/returndata.helper.ts","./src/app/components/shared/uploader/uploader.component.ts","./src/app/components/shared/uploader/uploader.component.html","./src/app/components/admin/admin-inicio/cerrar-sesion/cerrar-sesion.component.ts","./src/app/components/admin/admin-inicio/cerrar-sesion/cerrar-sesion.component.html","./src/app/components/admin/admin-inicio/categorias/ver-categorias/ver-categorias.component.ts","./src/app/components/admin/admin-inicio/categorias/ver-categorias/ver-categorias.component.html","./src/app/components/shared/flecha-navegacion/flecha-navegacion.component.ts","./src/app/components/shared/flecha-navegacion/flecha-navegacion.component.html","./src/app/components/admin/admin-inicio/mesas/ver-mesas/ver-mesas.component.ts","./src/app/components/admin/admin-inicio/mesas/ver-mesas/ver-mesas.component.html","./src/environments/environment.ts","./src/app/components/admin/admin-inicio/admin.routes.ts","./src/app/components/admin/admin-inicio/pedidos/ver-pedidos/ver-pedidos.component.ts","./src/app/components/admin/admin-inicio/pedidos/ver-pedidos/ver-pedidos.component.html","./src/app/services/mesas.service.ts","./src/app/components/admin/admin-inicio/mesas/nueva-mesa/nueva-mesa.component.ts","./src/app/components/admin/admin-inicio/mesas/nueva-mesa/nueva-mesa.component.html","./src/app/services/menu.service.ts","./src/app/components/shared/public-sidebar/public-sidebar.component.ts","./src/app/components/shared/public-sidebar/public-sidebar.component.html","./src/app/components/shared/admin-pedido-mesa/admin-pedido-mesa.component.html","./src/app/components/shared/admin-pedido-mesa/admin-pedido-mesa.component.ts","./src/app/components/admin/admin-inicio/menu/item-menu/item-menu.component.ts","./src/app/components/admin/admin-inicio/menu/item-menu/item-menu.component.html","./src/app/models/archivo.model.ts","./src/app/models/restaurant.model.ts","./src/app/services/resto.service.ts","./src/app/components/publico/inicio/inicio.component.html","./src/app/components/publico/inicio/inicio.component.ts","./src/app/components/publico/inicio/ver-plato/ver-plato.component.ts","./src/app/components/publico/inicio/ver-plato/ver-plato.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/services/cargar-archivos.service.ts","./src/app/services/categorias.service.ts","./src/app/components/admin/admin-inicio/inicio/inicio.component.ts","./src/app/components/admin/admin-inicio/inicio/inicio.component.html","./src/app/app.module.ts","./src/app/components/publico/inicio/seleccion-categorias/seleccion-categorias.component.html","./src/app/components/publico/inicio/seleccion-categorias/seleccion-categorias.component.ts","./src/environments/environment.prod.ts","./src/app/directives/dragdrop.directive.ts","./src/app/components/components.module.ts","./src/app/components/publico/inicio/bienvenida/bienvenida.component.ts","./src/app/components/publico/inicio/bienvenida/bienvenida.component.html","./src/app/services/pedidos.service.ts","./src/app/services/auth.service.ts","./src/app/components/admin/admin-inicio/categorias/nueva-categorias/nueva-categorias.component.ts","./src/app/components/admin/admin-inicio/categorias/nueva-categorias/nueva-categorias.component.html","./src/app/components/publico/inicio/inicio.routes.ts","./src/app/components/admin/admin-inicio/movimientos/ver-movimientos/ver-movimientos.component.ts","./src/app/components/admin/admin-inicio/movimientos/ver-movimientos/ver-movimientos.component.html","./src/app/app-routing.module.ts","./src/app/components/publico/scanner/scanner.component.ts","./src/app/components/publico/scanner/scanner.component.html","./src/app/components/admin/admin-inicio/menu/ver-menu/ver-menu.component.ts","./src/app/components/admin/admin-inicio/menu/ver-menu/ver-menu.component.html","./src/app/components/shared/public-sidebar-content/public-sidebar-content.component.ts","./src/app/components/shared/public-sidebar-content/public-sidebar-content.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-admin-inicio',\n  templateUrl: './admin-inicio.component.html',\n  styleUrls: ['./admin-inicio.component.styl']\n})\nexport class AdminInicioComponent implements OnInit {\n\n  constructor(){}\n\n  ngOnInit(){}\n\n}\n","<div class=\"contenedor-principal\">\n    <div class=\"menu-lateral\">\n        <img [routerLink]=\"['dashboard']\" src=\"../../../../assets/img/resto-manager-logo.svg\" alt=\"logo\">\n        <hr>\n        <ul class=\"menu-wrapper\">\n            <li [routerLink]=\"['dashboard']\" routerLinkActive=\"active\" class=\"menu-item\"><i class=\"fas fa-home\"></i>Inicio</li>\n            <li [routerLink]=\"['ver-categorias']\" routerLinkActive=\"active\" class=\"menu-item\"><i class=\"fas fa-tags\"></i>Categorías</li>\n            <li [routerLink]=\"['ver-menu']\" routerLinkActive=\"active\" class=\"menu-item\"><i class=\"fab fa-elementor\"></i>Menú</li>\n            <li [routerLink]=\"['ver-mesas']\" routerLinkActive=\"active\" class=\"menu-item\"><i class=\"fas fa-utensils\"></i>Mesas</li>\n            <li [routerLink]=\"['ver-pedidos']\" routerLinkActive=\"active\" class=\"menu-item\"><i class=\"fas fa-hamburger\"></i>Pedidos</li>\n            <li [routerLink]=\"['ver-movimientos']\" routerLinkActive=\"active\" class=\"menu-item\"><i class=\"fas fa-dollar-sign\"></i>Movimientos</li>\n        </ul>\n        <hr>\n        <ul class=\"menu-wrapper\">\n            <li [routerLink]=\"['configuracion']\" routerLinkActive=\"active\" class=\"menu-item\"><i class=\"fas fa-cog\"></i>Configuración</li>\n            <li [routerLink]=\"['cerrar-sesion']\" routerLinkActive=\"active\" class=\"menu-item\"><i class=\"fas fa-power-off\"></i>Cerrar sesión</li>\n        </ul>\n    </div>\n    <div class=\"contenido-completo\">\n        <div class=\"container-fluid pt-5\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n\n    ","export class UsuarioModel {\n    nombre!: string;\n    email!: string;\n    password!: string;\n}","import { Component, OnInit } from '@angular/core';\nimport { RestoData } from 'src/app/models/restaurant.model';\nimport { RestoService } from 'src/app/services/resto.service';\n\n@Component({\n  selector: 'app-configuracion',\n  templateUrl: './configuracion.component.html',\n  styleUrls: ['./configuracion.component.styl']\n})\nexport class ConfiguracionComponent implements OnInit {\n\n  uid_hash: string | null = null;\n  datos_restaurante : RestoData = new RestoData();\n\n  constructor(private restoService : RestoService) { }\n\n  ngOnInit(): void {\n    \n    this.restoService.obtenerRestaurant().subscribe(resp => {\n      this.datos_restaurante = resp;\n    })\n\n  }\n\n}\n","<h1 class=\"titulo-header\">Configuración | <span class=\"badge bg-dark\" *ngIf=\"datos_restaurante\">{{datos_restaurante.nombre}}</span></h1>\n<hr class=\"barra-header\">","<app-flecha-navegacion></app-flecha-navegacion>\n\n<div class=\"contenedor-titulo\">\n    <h1> {{ parametroCategoria | uppercase}} </h1>\n</div>\n\n<div *ngIf=\"!cargando\">\n    <div *ngIf=\"menu.length > 0\">\n        <div *ngFor=\"let item of menu\" class=\"main-card-container animate__animated animate__fadeInRight\" (click)=\"verPlato(item)\">\n            <div class=\"row\">\n                <div class=\"col-12 contendor-columnas-carta\">\n                    <div class=\"contenedor-imagen\" [ngStyle]=\"{'background-image':'url('+item.imagenUrl[0].url}\" >\n                    </div>\n                    <div class=\"contenedor-texto\">\n                        <h5 class=\"titulo\">{{item.nombre}}</h5>\n                        <p class=\"descripcion\">{{item.descripcion | slice:0:80}}...</p>\n                        <p class=\"info\">Cant. personas: {{item.cantPersonas}}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <div *ngIf=\"menu && menu.length == 0\">\n        <div class=\"alert alert-danger d-flex align-items-center\" role=\"alert\">\n            <div>\n                No hay elementos para elegir en esta sección :'(\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MenuModel } from 'src/app/interfaces/menu.interface';\nimport { MenuService } from 'src/app/services/menu.service';\n\n@Component({\n  selector: 'app-ver-menu-categoria',\n  templateUrl: './ver-menu-categoria.component.html',\n  styleUrls: ['./ver-menu-categoria.component.styl']\n})\nexport class VerMenuCategoriaComponent implements OnInit {\n\n  parametroCategoria!: string;\n  menu: MenuModel[] = [];\n  cargando : boolean = true;\n\n  constructor( private _ar: ActivatedRoute, private _ms: MenuService, private router:Router ) {\n\n    this._ar.params.subscribe(parametros => {\n      this.parametroCategoria = parametros['id'];\n    })\n\n  }\n\n  ngOnInit(): void {\n\n    this._ms.obtenerMenu().subscribe(resp => {\n      resp.forEach(elementoDeMenu => {\n        if(elementoDeMenu.categoria.toLowerCase() === this.parametroCategoria.toLowerCase()){\n          this.menu.push(elementoDeMenu);\n        }\n      })\n      this.cargando = false;\n    })\n\n  }\n\n  verPlato(item: MenuModel){\n    this.router.navigate(['inicio/ver-plato', item.id])\n  }\n\n}\n","import firebase from 'firebase'\n\nexport const retornaData = (snapshot : firebase.firestore.QuerySnapshot ) => {\n    const documentos : any[] = [];\n    snapshot.forEach(sh => {\n        documentos.push({\n          id: sh.id,\n          ...sh.data()\n        })\n      })\n    return documentos\n}\n\nexport const arreglarObjeto = (parm: any) => {\n  if(parm === null){return [];}\n  const item : any[] = [];\n  Object.keys(parm).forEach( key => {\n    const obj = parm[key];\n    obj.id = key;\n    item.push(obj);\n  })\n  return item;\n}","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ArchivoModel } from 'src/app/models/archivo.model';\nimport { CargarArchivosService } from 'src/app/services/cargar-archivos.service';\n\n@Component({\n  selector: 'app-uploader',\n  templateUrl: './uploader.component.html',\n  styleUrls: ['./uploader.component.styl']\n})\nexport class UploaderComponent implements OnInit {\n\n  estaSobreDrop : boolean = false;\n  archivos : ArchivoModel[] = [];\n\n  @Output() emisorDeArchivos : EventEmitter<ArchivoModel[]> = new EventEmitter();\n\n  constructor( private _cs : CargarArchivosService ) { }\n\n  ngOnInit(): void {\n  }\n\n  get progresoFinalizado(){\n    for(let a of this.archivos){\n      if(a.estaSubiendo){\n        return false;\n      }\n    }\n    return true;\n  }\n\n  async cargarImagenesAFirebase(){\n    await this._cs.cargarAFirebase(this.archivos).then(data => {\n      this.archivos = data;\n      this.emisorDeArchivos.emit(this.archivos)\n    })\n  }\n\n  limpiarArchivos(){\n    this.archivos = [];\n  }\n\n}\n","<div class=\"drag-container\" NgDragQueen [archivosDropeados]=\"archivos\">\n    <span><i class=\"fas fa-image\"></i> Soltar imágenes aquí</span>\n</div>\n\n<table class=\"table mt-3\">\n    <thead class=\"thead-dark\">\n        <th>Nombre</th>\n        <th>Tamaño</th>\n        <th>Progreso</th>\n    </thead>\n    <tbody *ngIf=\"archivos.length > 0\">\n        <tr *ngFor=\"let archivo of archivos;\">\n            <td>{{ archivo.nombre }}</td>\n            <td>{{ archivo.archivo.size / 1024 / 1024 | number: '.2-2' }} MB</td>\n            <td>\n                <div class=\"progress\">\n                    <div class=\"progress-bar progress-bar-striped\" role=\"progressbar\" [ngClass]=\"{ 'bg-success' : archivo.progreso == 100  ,  'bg-danger' : archivo.progreso < 100}\" [ngStyle]=\"{'width': archivo.progreso + '%'}\"></div>\n                </div>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n<div class=\"alert alert-info\" role=\"alert\" style=\"width: 100%;\" *ngIf=\"archivos.length == 0\">\n    No hay archivos cargados\n</div>\n\n<div class=\"row mt-3\">\n    <div class=\"col\">\n        <button type=\"button\" [disabled]=\"archivos.length == 0 || !progresoFinalizado\" (click)=\"cargarImagenesAFirebase()\" class=\"btn btn-outline-success mr-3\">Subir</button>\n        <button type=\"button\" [disabled]=\"archivos.length == 0 || !progresoFinalizado\" (click)=\"limpiarArchivos()\" class=\"btn btn-outline-danger\">Limpiar</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RestoData } from 'src/app/models/restaurant.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { RestoService } from 'src/app/services/resto.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-cerrar-sesion',\n  templateUrl: './cerrar-sesion.component.html',\n  styleUrls: ['./cerrar-sesion.component.styl']\n})\nexport class CerrarSesionComponent implements OnInit {\n\n  uid_hash: string | null = null;\n  datos_restaurante : RestoData = new RestoData();\n\n  constructor(private restoService : RestoService, private router: Router, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    \n    this.restoService.obtenerRestaurant().subscribe(resp => {\n      this.datos_restaurante = resp;\n    })\n\n  }\n\n  cerrarSesion(){\n    Swal.fire({\n      title: 'Cerrar sesión',\n      text: '¿Está seguro que desea cerrar sesión?',\n      icon: 'warning',\n      showConfirmButton: true,\n      showCancelButton: true,\n      confirmButtonText: 'Si',\n      cancelButtonText: 'No',\n    }).then(respuesta => {\n      if(respuesta.isConfirmed){\n        this.authService.logOut();\n        this.router.navigate(['****'])\n      }else{\n        Swal.close();\n      }\n    })\n  }\n\n}\n","<h1 class=\"titulo-header\">Cerrar sesión | <span class=\"badge bg-dark\" *ngIf=\"datos_restaurante\">{{datos_restaurante.nombre}}</span></h1>\n<hr class=\"barra-header\">\n\n<div class=\"alert alert-primary d-flex align-items-center\" role=\"alert\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" class=\"bi bi-exclamation-triangle-fill flex-shrink-0 me-2\" viewBox=\"0 0 16 16\" role=\"img\" aria-label=\"Warning:\">\n        <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\"/>\n    </svg>\n    <div class=\"ml-2\">\n        Estas a punto de cerrar sesión!\n    </div>\n</div>\n\n<button class=\"btn btn-danger\" (click)=\"cerrarSesion()\" >Cerrar sesión</button>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CategoriaModel } from 'src/app/interfaces/categorias.interface';\nimport { RestoData } from 'src/app/models/restaurant.model';\nimport { CategoriasService } from 'src/app/services/categorias.service';\nimport { RestoService } from 'src/app/services/resto.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-ver-categorias',\n  templateUrl: './ver-categorias.component.html',\n  styleUrls: ['./ver-categorias.component.styl']\n})\nexport class VerCategoriasComponent implements OnInit {\n\n  cargando = true;\n  datos_restaurante : RestoData = new RestoData();\n  categorias : CategoriaModel[] = [];\n  \n  constructor( private restoService : RestoService, \n               private categService : CategoriasService,\n               private router: Router) {}\n\n  ngOnInit(): void {\n    this.restoService.obtenerRestaurant().subscribe(resp => {\n      this.datos_restaurante = resp;\n    })\n\n    this.categService.obtenerCategorias().subscribe(resp => {\n      this.categorias = resp;\n      this.cargando = false;\n    })\n  }\n\n  crearNuevaCategoria(){\n    this.router.navigate( ['admin-inicio/categoria','nueva'] );\n  }\n\n  editarCategoria(cate : CategoriaModel){\n    this.router.navigate( ['admin-inicio/categoria',cate.id])\n  }\n\n  eliminarCategoria(cate:CategoriaModel){\n    Swal.fire({\n      title: '¿Está seguro que desea borrar esta categoría?',\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: `Borrar`,\n      denyButtonText: `NO borrar`,\n    }).then((result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        this.categService.borrarCategoria(cate).subscribe(resp => {})\n        const index = this.categorias.indexOf(cate)\n        this.categorias.splice(index,1);\n        Swal.close();\n      } else if (result.isDenied) {\n        Swal.close();\n      }\n    })\n  }\n\n}\n","<h1 class=\"titulo-header\">Categorías | <span class=\"badge bg-dark\" *ngIf=\"datos_restaurante\">{{datos_restaurante.nombre}}</span></h1>\n<hr class=\"barra-header\">\n<div class=\"d-flex justify-content-center\" *ngIf=\"cargando\">\n    <div class=\"spinner-border\" role=\"status\">\n        <span class=\"sr-only\">Cargando...</span>\n    </div>\n</div>\n<div class=\"container-fluid\" *ngIf=\"!cargando\">\n    <div class=\"d-flex flex-row-reverse\">\n        <div class=\"p-0 mt-2 mb-3\">\n            <button class=\"btn btn-primary\" (click)=\"crearNuevaCategoria()\">+ Categoría</button>\n        </div>\n    </div>\n\n    <div class=\"card border-dark mb-3\" *ngIf=\"categorias && categorias.length == 0\">\n        <div class=\"card-header\">Ctegorías de {{datos_restaurante.nombre}}</div>\n        <div class=\"card-body text-dark\">\n            <h5 class=\"card-title\">Bienvenido!</h5>\n            <p class=\"card-text\">En esta sección podrás cargar y administrar las categorías de menú  de tu restaurante. Comienza creando tu primera categoría!</p>\n        </div>\n    </div>\n\n    <table class=\"table table-striped\" *ngIf=\"categorias && categorias.length > 0\">\n        <thead class=\"table-dark\">\n            <tr>\n                <th>#</th>\n                <th>Nombre de categoría</th>\n                <th></th>\n                <th></th>\n            </tr>\n        </thead>\n        <tbody>\n                <tr *ngFor=\"let cate of categorias; index as i\">\n                <td>{{i+1}}</td>\n                <td>{{cate.nombre}}</td>\n                <td style=\"width: 140px;\">\n                    <button (click)=\"editarCategoria(cate)\" type=\"button\" class=\"btn btn-primary\"><i class=\"far fa-edit\"></i> Editar</button>\n                </td>\n                <td style=\"width: 140px;\">\n                    <button (click)=\"eliminarCategoria(cate)\" type=\"button\" class=\"btn btn-danger\"><i class=\"fas fa-trash\"></i> Eliminar</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-flecha-navegacion',\n  templateUrl: './flecha-navegacion.component.html',\n  styleUrls: ['./flecha-navegacion.component.styl']\n})\nexport class FlechaNavegacionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  volverAtras(){\n    window.history.back();\n  }\n\n}\n","<div class=\"boton-navegacion\" (click)=\"volverAtras()\">\n    <i class=\"fas fa-angle-double-left\"></i>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MesaModel } from 'src/app/interfaces/mesa.model';\nimport { RestoData } from 'src/app/models/restaurant.model';\nimport { MesasService } from 'src/app/services/mesas.service';\nimport { RestoService } from 'src/app/services/resto.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-ver-mesas',\n  templateUrl: './ver-mesas.component.html',\n  styleUrls: ['./ver-mesas.component.styl']\n})\nexport class VerMesasComponent implements OnInit {\n\n  cargando = true;\n  datos_restaurante : RestoData = new RestoData();\n  datos_mesas! : MesaModel[];\n  \n  constructor(private restoService : RestoService, private rl : Router, private ms: MesasService) { }\n\n  ngOnInit(): void {\n    \n    this.restoService.obtenerRestaurant().subscribe(resp => {\n      this.datos_restaurante = resp;\n    })\n\n    this.ms.obtenerMesas().subscribe(resp => {\n      this.datos_mesas = resp;\n      this.cargando = false;\n    })\n\n  }\n\n  crearNuevaMesa(){\n    this.rl.navigate(['admin-inicio/mesa','nueva']);\n  }\n\n  editarMesa(mesa: MesaModel){\n    this.rl.navigate(['admin-inicio/mesa',mesa.id]);\n  }\n\n  eliminarMesa(mesa:MesaModel){\n    Swal.fire({\n      title: '¿Está seguro que desea borrar esta mesa?',\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: `Borrar`,\n      denyButtonText: `NO borrar`,\n    }).then((result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        this.ms.eliminarMesa(mesa).subscribe(resp => {})\n        const index = this.datos_mesas.indexOf(mesa)\n        this.datos_mesas.splice(index,1);\n        Swal.close();\n      } else if (result.isDenied) {\n        Swal.close();\n      }\n    })\n  }\n\n}\n","<h1 class=\"titulo-header\">Mesas | <span class=\"badge bg-dark\" *ngIf=\"datos_restaurante\">{{datos_restaurante.nombre}}</span></h1>\n<hr class=\"barra-header\">\n<div class=\"d-flex justify-content-center\" *ngIf=\"cargando\">\n    <div class=\"spinner-border\" role=\"status\">\n        <span class=\"sr-only\">Cargando...</span>\n    </div>\n</div>\n<div class=\"container-fluid\" *ngIf=\"!cargando\">\n    <div class=\"d-flex flex-row-reverse\">\n        <div class=\"p-0 mt-2 mb-3\">\n            <button class=\"btn btn-primary\" (click)=\"crearNuevaMesa()\">+ Mesa</button>\n        </div>\n    </div>\n\n    <div class=\"card border-dark mb-3\" *ngIf=\"datos_mesas && datos_mesas.length == 0\">\n        <div class=\"card-header\">Mesas de {{datos_restaurante.nombre}}</div>\n        <div class=\"card-body text-dark\">\n            <h5 class=\"card-title\">Bienvenido!</h5>\n            <p class=\"card-text\">En esta sección podrás cargar y administrar las mesas de tu restaurante. Comienza creando tu primera mesa!</p>\n        </div>\n    </div>\n    \n    <table class=\"table table-striped\" *ngIf=\"datos_mesas && datos_mesas.length > 0\">\n        <thead class=\"table-dark\">\n            <tr>\n                <th>#</th>\n                <th>Nombre de mesa</th>\n                <th>Número</th>\n                <th>Estado de la mesa</th>\n                <th>Ocupada/Desocupada</th>\n                <th></th>\n                <th></th>\n            </tr>\n        </thead>\n        <tbody>\n                <tr *ngFor=\"let mesa of datos_mesas; index as i\">\n                <td>{{i+1}}</td>\n                <td>{{mesa.nombre}}</td>\n                <td>{{mesa.numero}}</td>\n                <td>\n                    <span *ngIf=\"mesa.activa\" class=\"badge bg-success text-white\">Activa</span>\n                    <span *ngIf=\"!mesa.activa\" class=\"badge bg-danger text-white\">Inactiva</span>\n                </td>\n                <td>\n                    <span *ngIf=\"mesa.ocupada\" class=\"badge bg-danger text-white\">Ocupada</span>\n                    <span *ngIf=\"!mesa.ocupada\" class=\"badge bg-success text-white\">Desocupada</span>\n                </td>\n                <td style=\"width:140px;\">\n                    <button (click)=\"editarMesa(mesa)\" type=\"button\" class=\"btn btn-primary\"><i class=\"far fa-edit\"></i> Editar</button>\n                </td>\n                <td style=\"width:140px;\">\n                    <button (click)=\"eliminarMesa(mesa)\" type=\"button\" class=\"btn btn-danger\"><i class=\"fas fa-trash\"></i> Eliminar</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  BASE_URL: 'https://isp20-828cd.web.app',\n  DB_URL : 'https://isp20-828cd-default-rtdb.firebaseio.com/resto/',\n  DB_NODE : localStorage.getItem('uid_hash') ? localStorage.getItem('uid_hash') : localStorage.getItem('public_uid_hash'),\n  firebaseConfig : {\n    apiKey: \"AIzaSyBpVBuWRHDkWh07JhGgnxLVIAWLFgGcPLM\",\n    authDomain: \"isp20-828cd.firebaseapp.com\",\n    databaseURL: \"https://isp20-828cd-default-rtdb.firebaseio.com\",\n    projectId: \"isp20-828cd\",\n    storageBucket: \"isp20-828cd.appspot.com\",\n    messagingSenderId: \"834409981790\",\n    appId: \"1:834409981790:web:890535628e8164030911cf\",\n    measurementId: \"G-B5J846TVLQ\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Routes } from '@angular/router';\n\nimport { CerrarSesionComponent } from './cerrar-sesion/cerrar-sesion.component';\nimport { ConfiguracionComponent } from './configuracion/configuracion.component';\n\nimport { InicioComponent } from './inicio/inicio.component';\nimport { ItemMenuComponent } from './menu/item-menu/item-menu.component';\nimport { VerMenuComponent } from './menu/ver-menu/ver-menu.component';\nimport { NuevaMesaComponent } from './mesas/nueva-mesa/nueva-mesa.component';\nimport { VerMesasComponent } from './mesas/ver-mesas/ver-mesas.component';\nimport { VerMovimientosComponent } from './movimientos/ver-movimientos/ver-movimientos.component';\nimport { VerPedidosComponent } from './pedidos/ver-pedidos/ver-pedidos.component';\nimport { NuevaCategoriasComponent } from './categorias/nueva-categorias/nueva-categorias.component';\nimport { VerCategoriasComponent } from './categorias/ver-categorias/ver-categorias.component';\n\nexport const ADMIN_ROUTES: Routes = [\n    {path: 'ver-categorias', component: VerCategoriasComponent},\n    {path: 'categoria/:id', component: NuevaCategoriasComponent},\n    {path: 'ver-mesas', component: VerMesasComponent},\n    {path: 'mesa/:id', component: NuevaMesaComponent},\n    {path: 'ver-menu', component: VerMenuComponent},\n    {path: 'menu/:id', component: ItemMenuComponent},\n    {path: 'ver-pedidos', component: VerPedidosComponent},\n    {path: 'ver-movimientos', component: VerMovimientosComponent},\n    {path: 'configuracion', component: ConfiguracionComponent},\n    {path: 'cerrar-sesion', component: CerrarSesionComponent},\n    {path: 'dashboard', component: InicioComponent},\n    {path: '**', pathMatch:'full', redirectTo: 'dashboard'}\n];\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { arreglarObjeto } from 'src/app/helpers/returndata.helper';\nimport { MesaModel } from 'src/app/interfaces/mesa.model';\nimport { IPedidoActivo } from 'src/app/interfaces/pedidoactivo.interface';\nimport { RestoData } from 'src/app/models/restaurant.model';\nimport { MesasService } from 'src/app/services/mesas.service';\nimport { PedidosService } from 'src/app/services/pedidos.service';\nimport { RestoService } from 'src/app/services/resto.service';\n\n@Component({\n  selector: 'app-ver-pedidos',\n  templateUrl: './ver-pedidos.component.html',\n  styleUrls: ['./ver-pedidos.component.styl']\n})\nexport class VerPedidosComponent implements OnInit, OnDestroy {\n\n  uid_hash: string | null = null;\n  datos_restaurante : RestoData = new RestoData();\n  datos_mesas : MesaModel[] = [];\n  intervalo : any;\n  internalSub! : Subscription;\n  carrier_mesa: string = '';\n  popupabierto : boolean = false;\n  carrier_pedidos: IPedidoActivo[] = [];\n\n\n  constructor(private restoService : RestoService, private _ms: MesasService, private _ps: PedidosService) {}\n\n  ngOnDestroy(){\n    clearInterval(this.intervalo);\n    this.internalSub.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    \n    this.restoService.obtenerRestaurant().subscribe(resp => {\n      this.datos_restaurante = resp;\n    })\n\n    this._ms.obtenerMesas().subscribe(resp => {\n      this.datos_mesas = resp;\n    })\n\n    //Ejecuto la funcion para escuchar y me suscribo\n    this.internalSub = this.escucharCambiosMesas(5000).subscribe(data => {\n      //Cada 5 segundos me devuelve la data\n\n      data.map(item => {\n        if(item.pedidoactivo){\n          item.pedidoactivo = arreglarObjeto(item.pedidoactivo)\n          const pedidosSinTomar : any[] = item.pedidoactivo.filter(p => p.entregado == false)\n          if(pedidosSinTomar && pedidosSinTomar.length > 0){\n            item.pedidosSinEntregar = pedidosSinTomar.length\n          }\n        }\n      })\n\n      this.datos_mesas = data;\n    });\n\n  }\n\n  // => Funcion que devuelve Observable\n  escucharCambiosMesas(t:number) {\n    //Retorno el observable de Mesas\n    return new Observable<MesaModel[]>( observer => {\n      //Configuro el intervalo cada 5 segundos\n      this.intervalo = setInterval(()=> {\n        //Ejecuto la consulta a Firebase\n        this._ms.obtenerMesas().subscribe(resp => {;\n          observer.next(resp) // => Responso con el observer (a los que esten suscriptos)\n        })\n      },t);\n    } );\n  }\n\n  public static entregarPedido(index:number){\n    console.log(index);\n  }\n  \n  verPedidosDeMesa(mesaId:any){\n    this._ps.obtenerPedidos(mesaId).subscribe( (respuesta:IPedidoActivo[]) => {\n      \n      this.carrier_mesa = mesaId;\n      this.carrier_pedidos = respuesta;\n\n      this.popupabierto = true;\n\n    })\n  }\n\n  cerrarPopup(){\n    this.popupabierto = false;\n  }\n\n}\n","<h1 class=\"titulo-header\">Pedidos | <span class=\"badge bg-dark\" *ngIf=\"datos_restaurante\">{{datos_restaurante.nombre}}</span></h1>\n<hr class=\"barra-header\">\n<table class=\"table table-striped\" *ngIf=\"datos_mesas && datos_mesas.length > 0\">\n    <thead class=\"table-dark\">\n        <tr>\n            <th>#</th>\n            <th>Nombre de mesa</th>\n            <th>Número</th>\n            <th>Ocupada/Desocupada</th>\n            <th>Cantidad de personas</th>\n            <th></th>\n            <th></th>\n        </tr>\n    </thead>\n    <tbody>\n            <tr *ngFor=\"let mesa of datos_mesas; index as i\">\n            <td>{{i+1}}</td>\n            <td>{{mesa.nombre}}</td>\n            <td>{{mesa.numero}}</td>\n            <td>\n                <span *ngIf=\"mesa.ocupada\" class=\"badge bg-danger text-white\">Ocupada</span>\n                <span *ngIf=\"!mesa.ocupada\" class=\"badge bg-success text-white\">Desocupada</span>\n            </td>\n            <td> {{mesa.cantidadComensales}} </td>\n            <td style=\"width:170px;\">\n                <button *ngIf=\"mesa.ocupada\" (click)=\"verPedidosDeMesa(mesa.id)\" type=\"button\" class=\"btn btn-primary\"><i class=\"fas fa-pizza-slice\"></i> Pedidos <span *ngIf=\"mesa.pedidosSinEntregar && mesa.pedidosSinEntregar > 0\" class=\"badge bg-danger\">{{mesa.pedidosSinEntregar}}</span></button>\n            </td>\n            <td style=\"width:170px;\">\n                <button *ngIf=\"mesa.ocupada\" (click)=\"verPedidosDeMesa(mesa.id)\" type=\"button\" class=\"btn btn-success\"><i class=\"fas fa-money-check\"></i> Cobrar</button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n<div class=\"pedidos-de-mesa\" *ngIf=\"popupabierto\">\n    <div class=\"btn-close\" (click)=\"cerrarPopup()\">\n        <i class=\"fas fa-times-circle\"></i>\n    </div>\n    <app-admin-pedido-mesa [mesaId]=\"carrier_mesa\" [pedidos]=\"carrier_pedidos\"></app-admin-pedido-mesa>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MesaModel } from '../interfaces/mesa.model';\n\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MesasService {\n\n  DB_URL  = environment.DB_URL;\n  DB_NODE = environment.DB_NODE;\n\n  constructor(private http: HttpClient) { }\n\n  obtenerMesas(){\n    return this.http.get<MesaModel[]>(`${this.DB_URL}${this.DB_NODE}/mesas.json`)\n      .pipe(map(this.arreglarObjeto))\n  }\n\n  obtenerMesaIndividual(id:any){\n    return this.http.get<MesaModel>(`${this.DB_URL}${this.DB_NODE}/mesas/${id}.json`)\n  }\n\n  crearMesa(mesa : MesaModel){\n    return this.http.post(`${this.DB_URL}${this.DB_NODE}/mesas.json`, mesa)\n      .pipe(\n        map((resp:any) => {\n          mesa.id = resp.name;\n          return mesa; //Retorno la mesa\n        })\n      )\n  }\n\n  arreglarObjeto(objetoMesas: any){\n    if(objetoMesas === null){return [];}\n    //////////////\n    const mesas : MesaModel[] = [];\n\n    Object.keys(objetoMesas).forEach( key => {\n      const mesa: MesaModel = objetoMesas[key];\n      mesa.id = key;\n      mesas.push(mesa);\n    })\n\n    return mesas;\n  }\n\n  actualizarMesa( mesa : MesaModel) {\n    \n    const mesaTemp : MesaModel = {\n      ...mesa\n    }\n    delete mesaTemp.id;\n\n    return this.http.put(`${this.DB_URL}${this.DB_NODE}/mesas/${mesa.id}.json`,mesaTemp)\n  }\n\n  eliminarMesa(mesa:MesaModel){\n    return this.http.delete<MesaModel>(`${this.DB_URL}${this.DB_NODE}/mesas/${mesa.id}.json`)\n  }\n\n  checkInMesa(mesa:MesaModel,mesaId:string, cantidadComensales:number){\n    const mesaTemp : MesaModel = {\n      ...mesa,\n      ocupada: true,\n      cantidadComensales: cantidadComensales\n    }\n    return this.http.put(`${this.DB_URL}${this.DB_NODE}/mesas/${mesaId}.json`,mesaTemp)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxQrcodeElementTypes, NgxQrcodeErrorCorrectionLevels } from '@techiediaries/ngx-qrcode';\nimport { MesaModel } from 'src/app/interfaces/mesa.model';\nimport { RestoData } from 'src/app/models/restaurant.model';\nimport { MesasService } from 'src/app/services/mesas.service';\nimport { RestoService } from 'src/app/services/resto.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-nueva-mesa',\n  templateUrl: './nueva-mesa.component.html',\n  styleUrls: ['./nueva-mesa.component.styl']\n})\nexport class NuevaMesaComponent implements OnInit {\n\n  datos_restaurante : RestoData = new RestoData();\n\n  mensaje : string = '';\n  mesaId : any | null = '';\n\n  elementType: NgxQrcodeElementTypes = NgxQrcodeElementTypes.URL;\n  errorCorrectionLevel: NgxQrcodeErrorCorrectionLevels = NgxQrcodeErrorCorrectionLevels.LOW;\n  qr_url = ``;\n\n  mesa : MesaModel = {\n    numero: 0,\n    activa: true,\n    nombre: ''\n  };\n\n  constructor(private restoService : RestoService, private rl : ActivatedRoute, private mesasService : MesasService, private route: Router) {}\n  \n  ngOnInit(): void {\n    this.restoService.obtenerRestaurant().subscribe(resp => {\n      this.datos_restaurante = resp;\n    })\n\n    this.mesaId = this.rl.snapshot.paramMap.get('id')\n\n    this.mensaje = (this.mesaId === 'nueva') ? 'Nueva mesa' : 'Editar mesa';\n    \n    if(this.mesaId !== 'nueva'){\n      this.mesasService.obtenerMesaIndividual(this.mesaId).subscribe(resp => {\n        this.mesa = resp;\n        this.mesa.id = this.mesaId\n        this.qr_url = `${environment.BASE_URL}/#/inicio/bienvenida/${environment.DB_NODE}/${this.mesa.id}`\n      })\n    }\n    \n\n\n  }\n\n  enviarFormulario(f : NgForm){\n\n    if(f.invalid){ return; }\n\n    if(this.mesa.id){\n      this.mesasService.actualizarMesa(this.mesa).subscribe(resp => {\n        this.route.navigate(['admin-inicio/ver-mesas'])\n      })\n    }else{\n      this.mesasService.crearMesa(this.mesa).subscribe(resp => {\n        this.route.navigate(['admin-inicio/ver-mesas'])\n      })    \n    }\n\n  }\n\n}\n","<h1 class=\"titulo-header\">{{mensaje}} | <span class=\"badge bg-dark\" *ngIf=\"datos_restaurante\">{{datos_restaurante.nombre}}</span></h1>\n<hr class=\"barra-header\">\n<div class=\"container-fluid\">\n    <div class=\"d-flex flex-row-reverse\">\n        <div class=\"p-0 mt-2 mb-3\">\n            <button class=\"btn btn-outline-danger\" routerLink=\"/admin-inicio/ver-mesas\">Volver</button>\n        </div>\n    </div>\n\n    <form (ngSubmit)=\"enviarFormulario(f)\" #f=\"ngForm\">\n\n        <div class=\"row mb-3\">\n            <div class=\"col\">\n                <input type=\"text\" name=\"id\" placeholder=\"ID\" readonly [(ngModel)]=\"mesa.id\" class=\"form-control\">\n            </div>\n        </div>\n        <div class=\"row mb-3\">\n            <div class=\"col-lg-8\">\n                <sup><i class=\"fas fa-asterisk\"></i></sup><label for=\"mesanombre\" class=\"form-label\">Nombre</label>\n                <input [(ngModel)]=\"mesa.nombre\" id=\"mesanombre\" required name=\"nombre\" type=\"text\" placeholder=\"Escribe el nombre de tu mesa\" required class=\"form-control\">\n            </div>\n            <div class=\"col-lg-4\">\n                <sup><i class=\"fas fa-asterisk\"></i></sup><label for=\"mesanumero\" class=\"form-label\">Número de la mesa</label>\n                <input [(ngModel)]=\"mesa.numero\" id=\"mesanumero\" required name=\"numero\" type=\"number\" placeholder=\"Ej: 10\" min=\"1\" required class=\"form-control\">\n            </div>\n        </div>\n        <div class=\"row mb-3\">\n            <div class=\"col-lg-6\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <hr>\n                        <label class=\"form-label\">Estado de la mesa <small>(click en el estado para cambiarlo)</small></label>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <button type=\"button\" (click)=\"mesa.activa = false\" *ngIf=\"mesa.activa\" class=\"btn btn-success\">\n                            <i class=\"fas fa-check-circle\"></i> Mesa activa\n                        </button>\n                        <button type=\"button\" (click)=\"mesa.activa = true\" *ngIf=\"!mesa.activa\" class=\"btn btn-danger\">\n                            <i class=\"far fa-times-circle\"></i> Mesa desactivada\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-lg-6\" *ngIf=\"mesa.id && qr_url\">\n                <hr>\n                <label class=\"form-label\">Código QR de la mesa <small>(click para imprimir)</small></label>\n                <ngx-qrcode [elementType]=\"elementType\" [value]=\"qr_url\" cssClass=\"qr-code\" [errorCorrectionLevel]=\"errorCorrectionLevel\"> </ngx-qrcode>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <hr>\n                <button class=\"btn btn-primary\">Guardar mesa</button>\n            </div>\n        </div>\n\n    </form>\n\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { filter, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.prod';\nimport { MenuModel } from '../interfaces/menu.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n\n  private DB_URL = environment.DB_URL;\n  private DB_NODE = environment.DB_NODE;\n\n  constructor( private http : HttpClient ) {}\n\n  obtenerMenu() {\n    return this.http.get<MenuModel[]>(`${this.DB_URL}${this.DB_NODE}/menu.json`)\n      .pipe(map(this.arreglarObjeto));\n  }\n\n  obtenerItemMenu( id : string ){\n    return this.http.get<MenuModel>(`${this.DB_URL}${this.DB_NODE}/menu/${id}.json`);\n  }\n\n  guardarItemMenu( menu: MenuModel ){\n    return this.http.post<MenuModel>(`${this.DB_URL}${this.DB_NODE}/menu.json`,menu)\n      .pipe(\n        map((resp:any) => {\n          menu.id = resp.name;\n          return menu;\n        })\n      )\n  }\n\n  actualizarItemMenu( menu: MenuModel ){\n    const menuTemp = {...menu}\n    delete menuTemp.id\n    return this.http.put<MenuModel>(`${this.DB_URL}${this.DB_NODE}/menu/${menu.id}.json`, menuTemp);\n  }\n\n  eliminarItemMenu( menu:MenuModel ){\n    return this.http.delete<MenuModel>(`${this.DB_URL}${this.DB_NODE}/menu/${menu.id}.json`);\n  }\n\n  arreglarObjeto(objetoMenu: any){\n    if(objetoMenu === null){return [];}\n\n    const menus : MenuModel[] = [];\n\n    Object.keys(objetoMenu).forEach( key => {\n      const menu: MenuModel = objetoMenu[key];\n      menu.id = key;\n      menus.push(menu);\n    })\n\n    return menus;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-public-sidebar',\n  templateUrl: './public-sidebar.component.html',\n  styleUrls: ['./public-sidebar.component.styl']\n})\nexport class PublicSidebarComponent implements OnInit {\n\n  expandido:boolean = true;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  expandirColapsar(){\n    this.expandido = !this.expandido\n  }\n\n}\n","<div class=\"ps-wrapper\" [ngClass]=\"{ 'expanded':expandido, 'collapsed':!expandido }\">\n    <div class=\"content-wrapper\">\n        <app-public-sidebar-content></app-public-sidebar-content>\n    </div>\n    <i (click)=\"expandirColapsar()\" class=\"fas fa-arrow-circle-right toggle-menu\" [ngClass]=\"{ 'expanded' : expandido, 'collapsed':!expandido }\"></i>\n</div>","<div class=\"wrapper\">\n    <div *ngIf=\"mesa\">\n        <h3>Pedidos de {{mesa.nombre}}</h3>\n        <hr>\n        <table class=\"table table-striped table-hover\">\n            <thead>\n                <th>Cantidad</th>\n                <th>Plato</th>\n                <th>Precio</th>\n                <th>Estado</th>\n                <th></th>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let pedido of pedidos; let i = index\">\n                    <td>x{{pedido.cantidad}}</td>\n                    <td>{{pedido.nombre}}</td>\n                    <td>{{pedido.precio}}</td>\n                    <td>\n                        <span *ngIf=\"!pedido.entregado\" class=\"badge bg-danger text-white\">No entregado</span>\n                        <span *ngIf=\"pedido.entregado\" class=\"badge bg-success text-white\">Entregado</span>\n                    </td>\n                    <td>\n                        <button *ngIf=\"!pedido.entregado\" class=\"btn btn-danger btn-small\" (click)=\"entregarPedido(i)\">Entregar</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { MesaModel } from 'src/app/interfaces/mesa.model';\nimport { IPedidoActivo } from 'src/app/interfaces/pedidoactivo.interface';\nimport { MesasService } from 'src/app/services/mesas.service';\nimport { PedidosService } from 'src/app/services/pedidos.service';\n\n@Component({\n  selector: 'app-admin-pedido-mesa',\n  templateUrl: './admin-pedido-mesa.component.html',\n  styleUrls: ['./admin-pedido-mesa.component.styl']\n})\nexport class AdminPedidoMesaComponent implements OnInit {\n\n  @Input() mesaId: string = '';\n  @Input() pedidos: IPedidoActivo[] = [];\n\n  mesa! : MesaModel;\n\n  constructor(private _ms:MesasService,private _ps: PedidosService) {\n  }\n  \n  ngOnInit(): void {\n    \n    this._ms.obtenerMesaIndividual(this.mesaId).subscribe(respuesta => {\n      this.mesa = respuesta;\n    })\n  }\n\n  entregarPedido(i:number) {\n    let pedido = this.pedidos[i];\n    let pedidoId = this.pedidos[i].id\n    pedido.entregado = true;\n    delete pedido.id\n    if(pedidoId){\n      this._ps.entregarPedido(this.mesaId,pedido,pedidoId).subscribe(respuesta => {\n        console.log(respuesta);\n        this.pedidos[i].entregado = true;\n      })\n    }else{\n      console.error('PedidoId no existe')\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MenuModel } from 'src/app/interfaces/menu.interface';\nimport { RestoData } from 'src/app/models/restaurant.model';\nimport { MenuService } from 'src/app/services/menu.service';\nimport { RestoService } from 'src/app/services/resto.service';\nimport { CategoriaModel } from 'src/app/interfaces/categorias.interface';\nimport { CategoriasService } from 'src/app/services/categorias.service';\nimport { ArchivoModel } from 'src/app/models/archivo.model';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-item-menu',\n  templateUrl: './item-menu.component.html',\n  styleUrls: ['./item-menu.component.styl']\n})\nexport class ItemMenuComponent implements OnInit {\n\n  datos_restaurante : RestoData = new RestoData();\n\n  mensaje : string = '';\n  menuId : any | null = '';\n  categorias : CategoriaModel[] = [];\n  \n  menu : MenuModel = {\n    nombre: '',\n    disponibilidad: true,\n    descripcion: '',\n    imagenUrl: [],\n    categoria: '',\n    valor: 0\n  }\n\n  constructor(private restoService : RestoService, private rl : ActivatedRoute, private menuService : MenuService, private route: Router, private categoriasService : CategoriasService) { }\n\n  ngOnInit(): void {\n    this.restoService.obtenerRestaurant().subscribe(resp => {\n      this.datos_restaurante = resp;\n    })\n    this.menuId = this.rl.snapshot.paramMap.get('id')\n    this.mensaje = (this.menuId === 'nueva') ? 'Nuevo item de menú' : 'Editar item de menú';\n\n    this.categoriasService.obtenerCategorias().subscribe(data => {\n      this.categorias = data;\n    })\n\n    if(this.menuId !== 'nueva'){\n      this.menuService.obtenerItemMenu(this.menuId).subscribe(resp => {\n        this.menu = {...resp,id:this.menuId};\n      })\n    }\n\n  }\n\n  obtenerRespuestaDeArchivos( event:ArchivoModel[] ){\n    this.menu.imagenUrl = event;\n  }\n\n  enviarFormulario(f : NgForm){\n    if(f.invalid){\n      Swal.fire('Error','Te faltan campos obligatorios!','error');\n      return;\n    }\n\n    if(this.menu.id){\n      this.menuService.actualizarItemMenu(this.menu).subscribe(res => {\n        this.irAMenu();\n      });\n    }else{\n      this.menuService.guardarItemMenu(this.menu).subscribe(res => {\n        this.irAMenu();\n      })\n    }\n    \n  }\n\nprivate irAMenu(){\n  this.route.navigate(['admin-inicio/ver-menu']);\n}\n\n}\n","<h1 class=\"titulo-header\">{{mensaje}} | <span class=\"badge bg-dark\"\n        *ngIf=\"datos_restaurante\">{{datos_restaurante.nombre}}</span></h1>\n<hr class=\"barra-header\">\n<div class=\"container-fluid\">\n    <div class=\"d-flex flex-row-reverse\">\n        <div class=\"p-0 mt-2 mb-3\">\n            <button class=\"btn btn-outline-danger\" routerLink=\"/admin-inicio/ver-menu\">Volver</button>\n        </div>\n    </div>\n\n    <form (ngSubmit)=\"enviarFormulario(f)\" #f=\"ngForm\">\n\n        <div class=\"row mb-3\">\n            <div class=\"col\">\n                <input type=\"text\" name=\"id\" placeholder=\"ID\" readonly [(ngModel)]=\"menu.id\" class=\"form-control\">\n            </div>\n        </div>\n        <div class=\"row mb-3\">\n            <div class=\"col-lg-12\">\n                <sup><i class=\"fas fa-asterisk\"></i></sup><label for=\"mesanombre\" class=\"form-label\">Nombre</label>\n                <input [(ngModel)]=\"menu.nombre\" id=\"mesanombre\" required name=\"nombre\" type=\"text\"\n                    placeholder=\"Escribe el nombre de tu item de menú\" required class=\"form-control\">\n            </div>\n        </div>\n        <div class=\"row mb-3\">\n            <div class=\"col-lg-4\">\n                <sup><i class=\"fas fa-asterisk\"></i></sup><label for=\"cantidadpersonas\" class=\"form-label\">Cant. de\n                    personas</label>\n                <input [(ngModel)]=\"menu.cantPersonas\" id=\"cantidadpersonas\" required name=\"cantidadpersonas\"\n                    type=\"number\" placeholder=\"000\" required class=\"form-control\">\n            </div>\n            <div class=\"col-lg-4\">\n                <sup><i class=\"fas fa-asterisk\"></i></sup><label for=\"precio\" class=\"form-label\">Precio</label>\n                <input [(ngModel)]=\"menu.valor\" id=\"precio\" required name=\"precio\" type=\"number\" placeholder=\"$ 000,00\"\n                    required class=\"form-control\">\n            </div>\n            <div class=\"col-lg-4\">\n                <sup><i class=\"fas fa-asterisk\"></i></sup><label for=\"categoria\" class=\"form-label\">Categoría</label>\n                <select [(ngModel)]=\"menu.categoria\" id=\"categoria\" required name=\"categoria\" type=\"text\"\n                    placeholder=\"$ 000,00\" required class=\"form-control\">\n                    <option value=\"\">Selecciona una categoría</option>\n                    <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{cat.nombre}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"row mb-3\">\n            <div class=\"col-lg-6\">\n                <sup><i class=\"fas fa-asterisk\"></i></sup><label for=\"desc\" class=\"form-label\">Descripción</label>\n                <textarea \n                    [(ngModel)]=\"menu.descripcion\"\n                    name=\"desc\" id=\"desc\" rows=\"10\"\n                    required\n                    placeholder=\"Esmérate con una gran descripción de tu item de menú! Haz que todos quieran ordernarlo!\"\n                    class=\"form-control\"></textarea>\n            </div>\n            <div class=\"col-lg-6\">\n                <label for=\"desc\" class=\"form-label\">Imágenes</label>\n                <!-- Componente de imagenes -->\n                <app-uploader (emisorDeArchivos)=\"obtenerRespuestaDeArchivos( $event )\" ></app-uploader>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <hr>\n                <label class=\"form-label\">Estado del item <small>(click en el estado para cambiarlo)</small></label>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <button type=\"button\" (click)=\"menu.disponibilidad = false\" *ngIf=\"menu.disponibilidad\"\n                    class=\"btn btn-success\">\n                    <i class=\"fas fa-check-circle\"></i> Disponible\n                </button>\n                <button type=\"button\" (click)=\"menu.disponibilidad = true\" *ngIf=\"!menu.disponibilidad\"\n                    class=\"btn btn-danger\">\n                    <i class=\"far fa-times-circle\"></i> No disponible\n                </button>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <hr>\n                <button class=\"btn btn-primary\">Guardar menú</button>\n            </div>\n        </div>\n\n    </form>\n\n</div>","export class ArchivoModel {\n    public archivo!        :File;\n    public nombre!         :string;\n    public url!            :string;\n    public estaSubiendo!   :boolean;\n    public progreso!       :number;\n\n    constructor(file : File)\n    {\n        this.archivo = file;\n        this.nombre = file.name;\n        this.estaSubiendo = false;\n        this.progreso = 0;\n    }\n}","export class RestoData {\n\n    nombre     : string = '';\n    email      : string = '';\n    logo       : string = '';\n    direccion  : string = '';\n    telefono   : string = '';\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { RestoData } from '../models/restaurant.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestoService {\n\n  DB_URL  = environment.DB_URL;\n  DB_NODE = environment.DB_NODE;\n\n  constructor(private http: HttpClient) { }\n\n  obtenerRestaurant(){\n      return this.http.get<RestoData>(`${this.DB_URL}${this.DB_NODE}.json`)\n  }\n\n  public_obtenerRestaurant(restoid : string){\n      return this.http.get<RestoData>(`${this.DB_URL}${restoid}.json`)\n        .pipe(map( rd => {\n          const rdn : RestoData  = {\n            nombre     : rd.nombre,\n            email      : rd.email,\n            logo       : rd.logo,\n            direccion  : rd.direccion,\n            telefono   : rd.telefono\n          }\n          return rdn;\n        } ))\n  }\n\n}\n","<div class=\"rm-fullContainer\">\n\n    <h1 class=\"titulo text-center\">{{restoNombre}}</h1>\n\n    <router-outlet></router-outlet>\n\n    <app-public-sidebar *ngIf=\"mesaId\"></app-public-sidebar>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RestoService } from 'src/app/services/resto.service';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.styl']\n})\nexport class InicioComponent implements OnInit {\n\n  restoNombre : string = '';\n  mesaId!: string | null;\n\n  constructor(private rs: RestoService){\n    this.rs.obtenerRestaurant().subscribe(resp => {\n      this.restoNombre = resp.nombre\n    })\n  }\n  \n  ngOnInit() {\n\n    const intervalo = setInterval(() => {\n      if(localStorage.getItem('mesaCheckInLS')){\n        this.mesaId = localStorage.getItem('mesaCheckInLS')\n        clearInterval(intervalo)\n      }\n    },100)\n\n  }  \n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MenuModel } from 'src/app/interfaces/menu.interface';\nimport { IPedidoActivo } from 'src/app/interfaces/pedidoactivo.interface';\nimport { MenuService } from 'src/app/services/menu.service';\nimport { PedidosService } from 'src/app/services/pedidos.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-ver-plato',\n  templateUrl: './ver-plato.component.html',\n  styleUrls: ['./ver-plato.component.styl']\n})\nexport class VerPlatoComponent implements OnInit {\n\n  menuItemId!: string;\n  plato! : MenuModel;\n  cargando : boolean = true;\n  cantidadAPedir! : number;\n  mesaId! : string;\n\n  constructor(private _ms:MenuService, private _ar:ActivatedRoute, private _ps: PedidosService, private router: Router) { \n\n    this._ar.params.subscribe(params => {\n      this.menuItemId = params['id'];\n    })\n\n  }\n\n  ngOnInit(): void {\n\n    this._ms.obtenerItemMenu(this.menuItemId).subscribe(respuesta =>{\n      this.plato = respuesta;\n      this.cargando = false\n    })\n\n  }\n\n  agregarAlPedido(){\n    if(this.cantidadAPedir > 0){\n      const mesaId = localStorage.getItem('mesaCheckInLS')\n      if(!mesaId){\n        Swal.fire('ERROR','hubo un error al intentar procesar tu mesa','error');\n        return;\n      }\n\n      const pedido : IPedidoActivo = {\n        ext_id: this.menuItemId,\n        nombre: this.plato.nombre,\n        cantidad: this.cantidadAPedir,\n        precio: (this.plato.valor * this.cantidadAPedir),\n        entregado: false\n      }\n\n      this._ps.enviarPedido(mesaId,pedido).subscribe(respuesta => {\n        \n        Swal.fire('Excelente!','Tu pedido ha sido tomado! Te notificaremos cuando esté siendo preparado','success');\n        this.router.navigate(['/inicio/seleccion-categoria']);\n      })\n\n    }else{\n      Swal.fire('Olvidaste la cantidad','Debes ingresar un valor mayor a cero','warning');\n    }\n  }\n\n}\n","<div class=\"main-wrapper\">\n    <div class=\"wrapper\" *ngIf=\"!cargando\">\n        <div class=\"img-container animate__animated animate__fadeIn\" [ngStyle]=\"{'background-image':'url('+plato.imagenUrl[0].url+')'}\"></div>\n        <div class=\"gradient-container animate__animated animate__fadeIn\"></div>\n        <div class=\"header-container animate__animated animate__fadeInUp\">\n            <h1>{{plato.nombre}}</h1>\n        </div>\n        <div class=\"content-container animate__animated animate__fadeInUp\">\n            <span class=\"badge bg-info text-light cantidad\">Cant. personas: {{plato.cantPersonas}}</span>\n            <p class=\"card-description mt-2\">{{plato.descripcion}}</p>\n            <hr>\n            <div class=\"form-inputs\">\n                <span class=\"precio\">$ {{plato.valor}}</span>\n                <input [(ngModel)]=\"cantidadAPedir\" type=\"number\" placeholder=\"Cant: 0\" name=\"cantidad\" id=\"cantidad\" />\n            </div>\n            <hr>\n            <button (click)=\"agregarAlPedido()\" type=\"button\" class=\"btn btn-success btn-block btn-lg\">Agregar al pedido</button>\n        </div>\n    </div>\n</div>\n<app-flecha-navegacion></app-flecha-navegacion>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.styl']\n})\nexport class AppComponent {\n  title = 'resto-manager';\n}\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  \n  constructor(private auth : AuthService, private router : Router){}\n\n  canActivate() : boolean {\n    if(this.auth.estaAutenticado()){\n      return true;\n    }else{\n      this.router.navigateByUrl('/admin-iniciarsesion');\n      return false;\n    }\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { UsuarioModel } from 'src/app/models/usuario.model';\nimport { AuthService } from 'src/app/services/auth.service';\n\nimport Swal from 'sweetalert2'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.styl']\n})\nexport class LoginComponent implements OnInit {\n\n  usuario : UsuarioModel = new UsuarioModel();\n  recuerdame : boolean = false;\n\n  constructor(private auth : AuthService, private router : Router) { }\n\n  ngOnInit() {\n    if(localStorage.getItem('email')){\n      this.usuario.email = String(localStorage.getItem('email'))\n      this.recuerdame = true\n    }\n  }\n\n  login(form : NgForm) {\n\n    //imprimir si el formulario es válido\n    if( form.invalid ){ return; }\n\n    Swal.fire('Ingresando','Espere por favor...','info');\n    Swal.showLoading();\n\n    this.auth.login(this.usuario).subscribe((data) => {\n      Swal.close();\n\n      localStorage.setItem('uid_hash',data.localId);\n\n      if(this.recuerdame == true){\n        localStorage.setItem('email',this.usuario.email)\n      }else{\n        if (localStorage.getItem('email')){\n          localStorage.removeItem('email')\n        }\n      }\n\n      this.router.navigateByUrl('/admin-inicio');\n    }, err => {\n      Swal.close();\n      switch (err.error.error.message) {\n        case 'INVALID_PASSWORD':\n          Swal.fire('Error','La contraseña no es válida','error');\n          break;\n        case 'EMAIL_NOT_FOUND':\n          Swal.fire('Error','El correo no pertenece a un usuario','error');\n          break;\n        default:\n          console.log(err);          \n          break;\n      }\n    })\n\n  }\n\n}\n","<div class=\"rm-login-container\">\n    <div class=\"animated fadeIn\">\n        <div class=\"rm-login-box\">\n            <img src=\"/assets/img/resto-manager-logo.svg\" alt=\"logo\" class=\"rm-logo\">\n            <hr>\n            <form (ngSubmit)=\"login( f )\" #f=\"ngForm\">\n                <span class=\"text-danger animated fadeIn\" *ngIf=\"f.submitted && f.controls['email'].errors\">El correo es obligatorio</span>\n                <input class=\"input100\" type=\"email\" name=\"email\" required email [(ngModel)]=\"usuario.email\" placeholder=\"Email\">\n                <span class=\"text-danger animated fadeIn\" *ngIf=\"f.submitted && f.controls['password'].errors\">Ingresa la contraseña (min: 6 letras)</span>\n                <input class=\"input100\" type=\"password\"  name=\"password\" required minlength=\"6\" [(ngModel)]=\"usuario.password\" placeholder=\"Password\">\n                <div class=\"rm-chk-container\">\n                    <input id=\"ckb1\" type=\"checkbox\" name=\"remember-me\" [(ngModel)]=\"recuerdame\">\n                    <label for=\"ckb1\">Recordar mi usuario</label>\n                </div>\n                <button class=\"btn-lg btn btn-outline-primary\" type=\"submit\">Iniciar Sesión</button>\n            </form>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport * as firebase from 'firebase'\nimport { environment } from 'src/environments/environment';\nimport { ArchivoModel } from '../models/archivo.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CargarArchivosService {\n\n  private carpetaImagenes = '/uploads';\n\n  constructor() {\n    firebase.default.initializeApp(environment.firebaseConfig);\n  }\n\n  async cargarAFirebase( archivos : ArchivoModel[] ){\n    //Subir los archivos a FireBase\n    const referenciaAlmacenamiento = firebase.default.storage().ref();\n    //Itero en cada archivo que vino por parametro\n    for( const item of archivos ){\n      //Marco que se esta subiendo\n      item.estaSubiendo = true;\n      //Si ya llegó a 100 el pogreso, continúa (pasa a la siguiente iteración)\n      if(item.progreso >= 100){\n        continue;\n      }\n      //Aca creo la tarea de subida con la ruta en donde va a estar mi\n      //archivo en firebase\n      const tareaDeSubida : firebase.default.storage.UploadTask = \n            referenciaAlmacenamiento.child(`${this.carpetaImagenes}/${item.nombre}`)\n            .put(item.archivo);\n      //Aca voy a escuchar si hay cambio de estado en la tarea\n      tareaDeSubida.on(  \n        firebase.default.storage.TaskEvent.STATE_CHANGED,\n        (snapshot) => {\n          item.progreso = (snapshot.bytesTransferred / snapshot.totalBytes ) * 100\n        },\n        (error) => console.error('Error al subir', error),\n        () => {\n          tareaDeSubida.snapshot.ref.getDownloadURL()\n          .then(data => {\n            item.url = data;\n            item.estaSubiendo = false;\n          }).catch(err => console.error('Error al devolver URL', err));\n        }\n      )      \n    }\n    return archivos;\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { CategoriaModel } from '../interfaces/categorias.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriasService {\n\n  private DB_URL  = environment.DB_URL;\n  private DB_NODE = environment.DB_NODE;\n\n  constructor(private http: HttpClient) { }\n\n  obtenerCategorias(){\n    return this.http.get<CategoriaModel[]>(`${this.DB_URL}${this.DB_NODE}/categorias.json`)\n      .pipe(map(this.arreglarObjeto))\n  }\n\n  obtenerCategoriaIndividual(id:string){\n    return this.http.get<CategoriaModel>(`${this.DB_URL}${this.DB_NODE}/categorias/${id}.json`)\n  }\n\n  actualizarCategoria(categoria : CategoriaModel){\n    const categoriaTemp : CategoriaModel = {\n      ...categoria\n    }\n    delete categoriaTemp.id\n    return this.http.put<CategoriaModel>(`${this.DB_URL}${this.DB_NODE}/categorias/${categoria.id}.json`,categoriaTemp)\n  }\n\n  borrarCategoria(categoria: CategoriaModel){\n    return this.http.delete<CategoriaModel>(`${this.DB_URL}${this.DB_NODE}/categorias/${categoria.id}.json`)\n  }\n\n  nuevaCategoria(categoria : CategoriaModel){\n    return this.http.post<CategoriaModel>(`${this.DB_URL}${this.DB_NODE}/categorias.json`,categoria)\n      .pipe(\n        map((resp:any) => {\n          categoria.id = resp.name;\n          return categoria; //Retorno la categoria\n        })\n      )\n  }\n\n  private arreglarObjeto(objetoCats: any){\n    if(objetoCats === null){return [];}\n    //////////////\n    const cats : CategoriaModel[] = [];\n\n    Object.keys(objetoCats).forEach( key => {\n      const cat: CategoriaModel = objetoCats[key];\n      cat.id = key;\n      cats.push(cat);\n    })\n\n    return cats;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { RestoData } from 'src/app/models/restaurant.model';\nimport { RestoService } from 'src/app/services/resto.service';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.styl']\n})\nexport class InicioComponent implements OnInit {\n\n  uid_hash: string | null = null;\n  datos_restaurante : RestoData = new RestoData();\n\n  constructor(private restoService : RestoService) { }\n\n  ngOnInit(): void {\n    \n    this.restoService.obtenerRestaurant().subscribe(resp => {\n      this.datos_restaurante = resp;\n    })\n\n  }\n\n}\n","<h1 class=\"titulo-header\">Inicio | <span class=\"badge bg-dark\" *ngIf=\"datos_restaurante\">Bienvenido a {{datos_restaurante.nombre}}</span></h1>\n<hr class=\"barra-header\">","import { NgModule } from '@angular/core';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { NgxQRCodeModule } from '@techiediaries/ngx-qrcode';\n\nimport { FormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { InicioComponent } from './components/publico/inicio/inicio.component';\nimport { ScannerComponent } from './components/publico/scanner/scanner.component';\n\nimport { ComponentsModule } from './components/components.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    InicioComponent,\n    ScannerComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ComponentsModule,\n    NgxQRCodeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<ul class=\"menu-categorias\" *ngIf=\"categorias\">\n    <li (click)=\"verCategoriaMenu(categoria.nombre)\" *ngFor=\"let categoria of categorias\" class=\"animate__animated animate__fadeInRight\" >\n        {{categoria.nombre}}\n    </li>\n</ul>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CategoriaModel } from 'src/app/interfaces/categorias.interface';\nimport { CategoriasService } from 'src/app/services/categorias.service';\n\n@Component({\n  selector: 'app-seleccion-categorias',\n  templateUrl: './seleccion-categorias.component.html',\n  styleUrls: ['./seleccion-categorias.component.styl']\n})\nexport class SeleccionCategoriasComponent implements OnInit {\n\n  categorias: CategoriaModel[] = [];\n\n  constructor(private _cs: CategoriasService, private _r:Router) {}\n\n  ngOnInit(): void {\n    this._cs.obtenerCategorias().subscribe(resp => {\n      this.categorias = resp;\n    })\n  }\n\n  verCategoriaMenu(categ:string){\n    this._r.navigate(['inicio/categoria-menu',categ.toLowerCase()])\n  }\n\n}\n","export const environment = {\n  production: true,\n  BASE_URL: 'https://isp20-828cd.web.app',\n  DB_URL : 'https://isp20-828cd-default-rtdb.firebaseio.com/resto/',\n  DB_NODE : localStorage.getItem('uid_hash') ? localStorage.getItem('uid_hash') : localStorage.getItem('public_uid_hash'),\n  firebaseConfig : {\n    apiKey: \"AIzaSyBpVBuWRHDkWh07JhGgnxLVIAWLFgGcPLM\",\n    authDomain: \"isp20-828cd.firebaseapp.com\",\n    databaseURL: \"https://isp20-828cd-default-rtdb.firebaseio.com\",\n    projectId: \"isp20-828cd\",\n    storageBucket: \"isp20-828cd.appspot.com\",\n    messagingSenderId: \"834409981790\",\n    appId: \"1:834409981790:web:890535628e8164030911cf\",\n    measurementId: \"G-B5J846TVLQ\"\n  }\n};\n","import {  Directive, \n          HostListener, \n          EventEmitter, \n          Output, \n          Input \n        } from '@angular/core';\n\nimport { ArchivoModel } from '../models/archivo.model'\n\n@Directive({\n  selector: '[NgDragQueen]'\n})\nexport class DragdropDirective {\n\n  @Input() archivosDropeados : ArchivoModel[] = [];\n  @Output() emisorDePosicion : EventEmitter<boolean> = new EventEmitter();\n\n  constructor() {}\n  \n  @HostListener('dragover',['$event'])\n  public mouseOver( event:any ){\n    //Esta funcion se ejecuta cuando el mouse pasa por arriba con algo agarrado\n    this._prevenirDetener(event);\n    this.emisorDePosicion.emit(true);\n  }\n  \n  @HostListener('dragleave',['$event'])\n  public mouseOut( event:any ){\n    //Esta funcion se ejecuta cuando el mouse pasa por arriba con algo agarrado\n    this.emisorDePosicion.emit(false);\n  }\n\n  @HostListener('drop', ['$event'])\n  public onDrop( event: any) {\n    const transferencia = this._obtenerDatosDropeados( event );\n    if(!transferencia){return}\n    this._extraerArchivos( transferencia.files )\n    this._prevenirDetener( event );\n    this.emisorDePosicion.emit(false);\n\n  }\n\n  private _extraerArchivos( listaDeArchivos:FileList ){\n    for( const propiedad in Object.getOwnPropertyNames(listaDeArchivos)){\n      const archivoTemporal = listaDeArchivos[propiedad]\n      if(this._puedeCargarse(archivoTemporal)){\n        const nuevoArchivo = new ArchivoModel(archivoTemporal);\n        this.archivosDropeados.push(nuevoArchivo);\n      }\n    }\n  }\n\n  private _obtenerDatosDropeados( event:any ){\n    return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer;\n  }\n\n  //VALIDACIONES\n  //Prevenir que se abra la imágen por default cuando hago el drop\n  private _prevenirDetener( event : any) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  //Sabes si el archivo ya existe en el array para que no esté 2 veces\n  private _archivoYaDropeado( nombreArchivo:string ) :boolean {\n    for ( const archivo of this.archivosDropeados ){\n      if( archivo.nombre == nombreArchivo ){\n        console.log('El archivo ya está agregado');\n        return true;\n      }\n    }\n    return false;\n  }\n\n  //Sabes si es de tipo imágen\n  private _esImagen( tipoArchivo:string ) :boolean {\n    return ( tipoArchivo === '' || tipoArchivo === undefined ) ? false : tipoArchivo.startsWith('image');\n  }\n\n  //archivo puede ser cargado\n  private _puedeCargarse( archivo:File ) :boolean {\n    return (!this._archivoYaDropeado(archivo.name) && this._esImagen(archivo.type))\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { environment } from 'src/environments/environment';\n\nimport { FormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http'\nimport { AppRoutingModule } from '../app-routing.module';\nimport { AngularFireModule } from '@angular/fire';\n\nimport { AdminInicioComponent } from './admin/admin-inicio/admin-inicio.component';\nimport { InicioComponent } from './admin/admin-inicio/inicio/inicio.component';\nimport { VerMenuComponent } from './admin/admin-inicio/menu/ver-menu/ver-menu.component';\nimport { ItemMenuComponent } from './admin/admin-inicio/menu/item-menu/item-menu.component';\nimport { VerMesasComponent } from './admin/admin-inicio/mesas/ver-mesas/ver-mesas.component';\nimport { NuevaMesaComponent } from './admin/admin-inicio/mesas/nueva-mesa/nueva-mesa.component';\nimport { VerMovimientosComponent } from './admin/admin-inicio/movimientos/ver-movimientos/ver-movimientos.component';\nimport { VerPedidosComponent } from './admin/admin-inicio/pedidos/ver-pedidos/ver-pedidos.component';\nimport { ConfiguracionComponent } from './admin/admin-inicio/configuracion/configuracion.component';\nimport { CerrarSesionComponent } from './admin/admin-inicio/cerrar-sesion/cerrar-sesion.component';\nimport { VerCategoriasComponent } from './admin/admin-inicio/categorias/ver-categorias/ver-categorias.component';\nimport { NuevaCategoriasComponent } from './admin/admin-inicio/categorias/nueva-categorias/nueva-categorias.component';\nimport { UploaderComponent } from './shared/uploader/uploader.component';\nimport { DragdropDirective } from '../directives/dragdrop.directive';\nimport { BienvenidaComponent } from './publico/inicio/bienvenida/bienvenida.component';\nimport { SeleccionCategoriasComponent } from './publico/inicio/seleccion-categorias/seleccion-categorias.component';\nimport { VerMenuCategoriaComponent } from './publico/inicio/ver-menu-categoria/ver-menu-categoria.component';\nimport { FlechaNavegacionComponent } from './shared/flecha-navegacion/flecha-navegacion.component';\nimport { VerPlatoComponent } from './publico/inicio/ver-plato/ver-plato.component';\nimport { NgxQRCodeModule } from '@techiediaries/ngx-qrcode';\nimport { PublicSidebarComponent } from './shared/public-sidebar/public-sidebar.component';\nimport { PublicSidebarContentComponent } from './shared/public-sidebar-content/public-sidebar-content.component';\nimport { AdminPedidoMesaComponent } from './shared/admin-pedido-mesa/admin-pedido-mesa.component';\n\n@NgModule({\n  declarations: [\n    AdminInicioComponent,\n    InicioComponent,\n    VerMenuComponent,\n    ItemMenuComponent,\n    VerMesasComponent,\n    NuevaMesaComponent,\n    VerMovimientosComponent,\n    VerPedidosComponent,\n    ConfiguracionComponent,\n    CerrarSesionComponent,\n    VerCategoriasComponent,\n    NuevaCategoriasComponent,\n    UploaderComponent,\n    DragdropDirective,\n    BienvenidaComponent,\n    SeleccionCategoriasComponent,\n    VerMenuCategoriaComponent,\n    FlechaNavegacionComponent,\n    VerPlatoComponent,\n    PublicSidebarComponent,\n    PublicSidebarContentComponent,\n    AdminPedidoMesaComponent\n  ],\n  imports: [\n    CommonModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NgxQRCodeModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig)\n  ],\n  exports: [\n    AdminInicioComponent,\n    InicioComponent,\n    VerMenuComponent,\n    ItemMenuComponent,\n    VerMesasComponent,\n    NuevaMesaComponent,\n    VerMovimientosComponent,\n    VerPedidosComponent,\n    ConfiguracionComponent,\n    CerrarSesionComponent,\n    VerCategoriasComponent,\n    NuevaCategoriasComponent,\n    UploaderComponent,\n    DragdropDirective,\n    BienvenidaComponent,\n    SeleccionCategoriasComponent,\n    VerMenuCategoriaComponent,\n    FlechaNavegacionComponent,\n    VerPlatoComponent,\n    PublicSidebarComponent,\n    PublicSidebarContentComponent,\n    AdminPedidoMesaComponent\n  ]\n})\nexport class ComponentsModule { }\n","import { Component, AfterViewInit, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MesaModel } from 'src/app/interfaces/mesa.model';\nimport { RestoData } from 'src/app/models/restaurant.model';\nimport { MesasService } from 'src/app/services/mesas.service';\nimport { RestoService } from 'src/app/services/resto.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-bienvenida',\n  templateUrl: './bienvenida.component.html',\n  styleUrls: ['./bienvenida.component.styl']\n})\nexport class BienvenidaComponent implements OnInit {\n\n  private restoId : string = '';\n  private mesaId : string = '';\n  public datos_mesa! : MesaModel;\n  public datos_resto! : RestoData;\n  public cantidadComensales! : number;\n\n  constructor( private _ms: MesasService, private activatedRoute : ActivatedRoute, private _rs: RestoService, private router: Router ) {\n    //Recupero parametros\n    this.activatedRoute.params.subscribe(params => {\n      this.restoId = params.idResto;\n      this.mesaId  = params.idMesa;\n\n      if(!localStorage.getItem('public_uid_hash')){\n        localStorage.setItem('public_uid_hash',this.restoId);\n      }\n\n    })\n  }\n\n  ngOnInit(): void {\n    //Recupero datos del restaurant\n    this._rs.public_obtenerRestaurant(this.restoId).subscribe(rd => {\n      this.datos_resto = rd;\n    })\n    //Recupero datos de la mesa\n    this._ms.obtenerMesaIndividual(this.mesaId).subscribe(mesa => {\n      this.datos_mesa = mesa;\n    })\n  }\n\n  registrarMesa(formulario : NgForm){\n\n    if(formulario.invalid){\n      Swal.fire('Error','La cantidad de comensales no puede estar vacía','error');\n      return;\n    }else{\n      if(this.cantidadComensales > 0){\n        this._ms.checkInMesa(this.datos_mesa,this.mesaId,this.cantidadComensales).subscribe(resp => {\n          localStorage.setItem('mesaCheckInLS',this.mesaId);\n          this.router.navigate(['/inicio/seleccion-categoria']);\n        });\n      }else{\n        Swal.fire('Error','La cantidad de comensales no puede ser 0','error');\n      }\n    }\n\n  }\n\n}\n","<div class=\"rm-white-bg\">\n    <div class=\"content-center\">\n        <h1 class=\"titulo-resto\" *ngIf=\"datos_resto\"> {{datos_resto.nombre}} </h1>\n        <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quia, tempora nesciunt ipsam modi ab cupiditate quibusdam similique asperiores illo inventore eligendi delectus numquam consequatur consectetur voluptate sunt soluta. Alias, quidem!</p>\n        <p *ngIf=\"datos_mesa\">Estas en la mesa: {{datos_mesa.nombre}} <br> ¿Cuantas personas hay en tu mesa?</p>\n        <form *ngIf=\"datos_mesa\" #formulario=\"ngForm\" (ngSubmit)=\"registrarMesa(formulario)\">\n            <input required [(ngModel)]=\"cantidadComensales\" class=\"form-control gordito\" placeholder=\"00\" type=\"number\" name=\"cantidadComensales\" id=\"cantidadComensales\" />\n            <button type=\"submit\">Ingresar</button>\n        </form>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { arreglarObjeto } from '../helpers/returndata.helper';\nimport { IPedidoActivo } from '../interfaces/pedidoactivo.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PedidosService {\n\n  constructor( private http : HttpClient ) { }\n\n  obtenerPedidos(mesaId:string){\n    return this.http.get<IPedidoActivo[]>(`${environment.DB_URL}${environment.DB_NODE}/mesas/${mesaId}/pedidoactivo.json`)\n            .pipe(map(arreglarObjeto));\n  }\n\n  enviarPedido(mesaId:string, pedido:IPedidoActivo){\n    return this.http.post<IPedidoActivo>(`${environment.DB_URL}${environment.DB_NODE}/mesas/${mesaId}/pedidoactivo.json`, pedido)\n  }\n\n  entregarPedido(mesaId:string, pedido:IPedidoActivo, pedidoId: string){\n    return this.http.put<IPedidoActivo>(`${environment.DB_URL}${environment.DB_NODE}/mesas/${mesaId}/pedidoactivo/${pedidoId}.json`, pedido)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { UsuarioModel } from '../models/usuario.model'\nimport { map } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private URL_API = 'https://identitytoolkit.googleapis.com/v1/accounts:'\n  private API_KEY = 'AIzaSyBpVBuWRHDkWh07JhGgnxLVIAWLFgGcPLM'\n\n  userToken! : string;\n\n  constructor( private http : HttpClient ) { \n    this.getToken();\n  }\n\n  login(usuario: UsuarioModel){\n    \n    const authData = {\n      ...usuario,\n      returnSecureToken: true\n    }\n\n    return this.http.post(\n      `${this.URL_API}signInWithPassword?key=${this.API_KEY}`,\n      authData\n    ).pipe(\n      map( (resp:any) => {\n        this.saveToken(resp['idToken']);\n        return resp;\n      })\n    );\n    \n  }\n\n  private saveToken( idToken : string) {\n    this.userToken = idToken;\n    localStorage.setItem('token',idToken);\n  }\n\n  private getToken(){\n    if(localStorage.getItem('token')){\n      this.userToken = String(localStorage.getItem('token'))\n    }else{\n      this.userToken = '';\n    }\n\n    return this.userToken;\n\n  }\n\n  estaAutenticado() : boolean {\n    return this.userToken.length > 20;\n  }\n\n  logOut(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('uid_hash');\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CategoriaModel } from 'src/app/interfaces/categorias.interface';\nimport { RestoData } from 'src/app/models/restaurant.model';\nimport { CategoriasService } from 'src/app/services/categorias.service';\nimport { RestoService } from 'src/app/services/resto.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-nueva-categorias',\n  templateUrl: './nueva-categorias.component.html',\n  styleUrls: ['./nueva-categorias.component.styl']\n})\nexport class NuevaCategoriasComponent implements OnInit {\n\n  datos_restaurante : RestoData = new RestoData();\n  mensaje : string = '';\n  categId : any | null  = '';\n  categoria : CategoriaModel = {\n    nombre: ''\n  }\n\n  constructor(  private restoService : RestoService,\n                private rl : ActivatedRoute,\n                private _cs: CategoriasService,\n                private route : Router ) {}\n\n  ngOnInit(): void {\n    this.restoService.obtenerRestaurant().subscribe(resp => {\n      this.datos_restaurante = resp;\n    })\n\n    this.categId = this.rl.snapshot.paramMap.get('id');\n    this.mensaje = (this.categId === 'nueva') ? 'Nueva categoría' : 'Editar categoría';\n\n    if(this.categId !== 'nueva'){\n      this._cs.obtenerCategoriaIndividual(this.categId).subscribe(resp => {\n        this.categoria = resp;\n        this.categoria.id = this.categId;\n      })\n    }\n\n  }\n\n  enviarFormulario(form:NgForm){\n    if(form.invalid){\n      Swal.fire('Error','Debe ingresar el nombre de la categoría','error');  \n      return;\n    }\n\n    //Primero recupero los datos de las mesas existentes\n    let tempCategorias : CategoriaModel[] = [];\n    let yaExiste : boolean = false;\n    this._cs.obtenerCategorias().subscribe(resp => {\n      tempCategorias = resp;\n      //Ahora recorro los datos\n      for(let cat of tempCategorias){\n        if(cat.nombre.toLowerCase() === this.categoria.nombre.toLowerCase()){\n          //Si coincidieron es porque ya hay un categoria igual\n          yaExiste = true;\n          break;\n        }\n      }\n      if(this.categoria.id){\n        this._cs.actualizarCategoria(this.categoria).subscribe(resp => {\n          this.route.navigate(['admin-inicio/ver-categorias'])\n        })\n      }else{\n        if(yaExiste === false){\n          this._cs.nuevaCategoria(this.categoria).subscribe(resp => {\n            this.route.navigate(['admin-inicio/ver-categorias'])\n          })\n        }else{\n          Swal.fire('Error','Ya existe una categoría con ese nombre!','error');\n        }\n        //Nueva categoria\n      }\n\n    })\n\n\n  }\n\n}\n","<h1 class=\"titulo-header\">{{mensaje}} | <span class=\"badge bg-dark\" *ngIf=\"datos_restaurante\">{{datos_restaurante.nombre}}</span></h1>\n<hr class=\"barra-header\">\n<div class=\"container-fluid\">\n    <div class=\"d-flex flex-row-reverse\">\n        <div class=\"p-0 mt-2 mb-3\">\n            <button class=\"btn btn-outline-danger\" routerLink=\"/admin-inicio/ver-categorias\">Volver</button>\n        </div>\n    </div>\n    <form (ngSubmit)=\"enviarFormulario(f)\" #f=\"ngForm\">\n\n        <div class=\"row mb-3\">\n            <div class=\"col\">\n                <input type=\"text\" name=\"id\" placeholder=\"ID\" readonly [(ngModel)]=\"categoria.id\" class=\"form-control\">\n            </div>\n        </div>\n        <div class=\"row mb-3\">\n            <div class=\"col-lg-12\">\n                <sup><i class=\"fas fa-asterisk\"></i></sup><label for=\"mesanombre\" class=\"form-label\">Nombre</label>\n                <input \n                    [(ngModel)]=\"categoria.nombre\" \n                    id=\"mesanombre\" \n                    required \n                    name=\"nombre\" \n                    type=\"text\" \n                    placeholder=\"Escribe el nombre de tu categoría\" \n                    class=\"form-control\"\n                />\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <hr>\n                <button class=\"btn btn-primary\">Guardar categoría</button>\n            </div>\n        </div>\n\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BienvenidaComponent } from './bienvenida/bienvenida.component';\nimport { InicioComponent } from './inicio.component';\nimport { SeleccionCategoriasComponent } from './seleccion-categorias/seleccion-categorias.component';\nimport { VerMenuCategoriaComponent } from './ver-menu-categoria/ver-menu-categoria.component';\nimport { VerPlatoComponent } from './ver-plato/ver-plato.component';\n\nconst INICIO_ROUTES: Routes = [\n    { \n        path: 'inicio',\n        component: InicioComponent,\n        children: [\n            { path: '', component: BienvenidaComponent },\n            { path: 'bienvenida/:idResto/:idMesa', component: BienvenidaComponent },\n            { path: 'seleccion-categoria', component: SeleccionCategoriasComponent },\n            { path: 'categoria-menu/:id', component: VerMenuCategoriaComponent },\n            { path: 'ver-plato/:id', component: VerPlatoComponent }\n        ]\n    }\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(INICIO_ROUTES)],\n    exports: [RouterModule]\n})\nexport class InicioRoutingModule {}","import { Component, OnInit } from '@angular/core';\nimport { RestoData } from 'src/app/models/restaurant.model';\nimport { RestoService } from 'src/app/services/resto.service';\n\n@Component({\n  selector: 'app-ver-movimientos',\n  templateUrl: './ver-movimientos.component.html',\n  styleUrls: ['./ver-movimientos.component.styl']\n})\nexport class VerMovimientosComponent implements OnInit {\n\n  uid_hash: string | null = null;\n  datos_restaurante : RestoData = new RestoData();\n\n  constructor(private restoService : RestoService) { }\n\n  ngOnInit(): void {\n    \n    this.restoService.obtenerRestaurant().subscribe(resp => {\n      this.datos_restaurante = resp;\n    })\n\n  }\n\n}\n","<h1 class=\"titulo-header\">Movimientos | <span class=\"badge bg-dark\" *ngIf=\"datos_restaurante\">{{datos_restaurante.nombre}}</span></h1>\n<hr class=\"barra-header\">","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from '../app/guards/auth.guard'\nimport { LoginComponent } from './components/login/login.component';\nimport { AdminInicioComponent } from './components/admin/admin-inicio/admin-inicio.component'\nimport { ScannerComponent } from './components/publico/scanner/scanner.component'\nimport { ADMIN_ROUTES } from './components/admin/admin-inicio/admin.routes';\nimport { InicioRoutingModule } from './components/publico/inicio/inicio.routes';\n\nconst routes: Routes = [\n  { \n    path: 'admin-inicio', \n    component: AdminInicioComponent, \n    canActivate: [AuthGuard],\n    children: ADMIN_ROUTES\n  },\n  { \n    path: 'admin-iniciarsesion',\n    component: LoginComponent },\n  { \n    path: 'public/scanner' ,\n    component : ScannerComponent\n  },\n  { \n    path: '**', \n    redirectTo: 'public/scanner'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {useHash: true}),\n    InicioRoutingModule\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-scanner',\n  templateUrl: './scanner.component.html',\n  styleUrls: ['./scanner.component.styl']\n})\nexport class ScannerComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  scanTable(){\n    this.router.navigateByUrl('/inicio/bienvenida/cu8sl9qmjbSTeQVw2Ip38LccqQq1/-MihqHhST52sZT3xgWDt')\n  }\n\n}\n","<div class=\"scanner-wrapper\">\n    <img src=\"assets/img/resto-manager-logo.svg\" alt=\"logo\" class=\"rm-logo\">\n    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Illum eveniet harum officiis voluptatem, similique consequuntur commodi id aspernatur quos illo minima quod! Quae id at neque dolorem corporis beatae aspernatur.</p>\n    <button (click)=\"scanTable()\" class=\"btn btn-primary\">ESCANEAR MESA</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MenuModel } from 'src/app/interfaces/menu.interface';\nimport { RestoData } from 'src/app/models/restaurant.model';\nimport { MenuService } from 'src/app/services/menu.service';\nimport { RestoService } from 'src/app/services/resto.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-ver-menu',\n  templateUrl: './ver-menu.component.html',\n  styleUrls: ['./ver-menu.component.styl']\n})\nexport class VerMenuComponent implements OnInit {\n\n  datos_restaurante : RestoData = new RestoData();\n  datos_menu : MenuModel[] = [];\n  cargando = true;\n\n  constructor(private restoService : RestoService, private menuService : MenuService, private router : Router){}\n\n  ngOnInit(): void {\n    \n    this.restoService.obtenerRestaurant().subscribe(resp => {\n      this.datos_restaurante = resp;\n    })\n\n    this.menuService.obtenerMenu().subscribe(data => {\n      this.datos_menu = data;\n      this.cargando = false;\n    })\n\n  }\n\n  crearNuevoMenu(){\n    this.router.navigate( ['admin-inicio/menu','nueva'] );\n  }\n\n  editarMenu(menu : MenuModel){\n    this.router.navigate(['admin-inicio/menu', menu.id]);\n  }\n\n  eliminarMenu(menu:MenuModel){\n    Swal.fire({\n      title: '¿Está seguro que desea eliminar este item de menú?',\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: 'Borrar',\n      denyButtonText: 'No borrar',\n    }).then((result) => {\n      if(result.isConfirmed){\n        this.menuService.eliminarItemMenu(menu).subscribe(res => {;\n          const idx : number = this.datos_menu.indexOf(menu);\n          this.datos_menu.splice(idx,1);\n          Swal.close();\n        });\n      }else if(result.isDenied){\n        Swal.close();\n      }\n    })\n  }\n\n}\n","<h1 class=\"titulo-header\">Menú | <span class=\"badge bg-dark\" *ngIf=\"datos_restaurante\">{{datos_restaurante.nombre}}</span></h1>\n<hr class=\"barra-header\">\n<div class=\"d-flex justify-content-center\" *ngIf=\"cargando\">\n    <div class=\"spinner-border\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n    </div>\n</div>\n<div class=\"container-fluid\" *ngIf=\"!cargando\">\n    <div class=\"d-flex flex-row-reverse\">\n        <div class=\"p-0 mt-2 mb-3\">\n            <button class=\"btn btn-primary\" (click)=\"crearNuevoMenu()\">+ Menú</button>\n        </div>\n    </div>\n\n    <div class=\"card border-dark mb-3\" *ngIf=\"datos_menu && datos_menu.length == 0\">\n        <div class=\"card-header\">Menú de {{datos_restaurante.nombre}}</div>\n        <div class=\"card-body text-dark\">\n            <h5 class=\"card-title\">Bienvenido!</h5>\n            <p class=\"card-text\">En esta sección podrás cargar y administrar el menú de tu restaurante. Comienza creando tu primer item de menú!</p>\n        </div>\n    </div>\n    \n    <table class=\"table table-striped\" *ngIf=\"datos_menu && datos_menu.length > 0\">\n        <thead class=\"table-dark\">\n            <tr>\n                <th>#</th>\n                <th></th>\n                <th>Nombre de mesa</th>\n                <th>Número</th>\n                <th>Estado de la mesa</th>\n                <th></th>\n                <th></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let menu of datos_menu; index as i\">\n                <td>{{i+1}}</td>\n                <td>\n                    <img class=\"thumbnail-menu\" [src]=\"menu.imagenUrl[0].url\" [alt]=\"menu.nombre\" />\n                </td>\n                <td>{{menu.nombre}}</td>\n                <td>{{menu.categoria}}</td>\n                <td>\n                    <span *ngIf=\"menu.disponibilidad\" class=\"badge bg-success text-white\">Disponible</span>\n                    <span *ngIf=\"!menu.disponibilidad\" class=\"badge bg-danger text-white\">No disponible</span>\n                </td>\n                <td style=\"width:140px;\">\n                    <button (click)=\"editarMenu(menu)\" type=\"button\" class=\"btn btn-primary\"><i class=\"far fa-edit\"></i> Editar</button>\n                </td>\n                <td style=\"width:140px;\">\n                    <button (click)=\"eliminarMenu(menu)\" type=\"button\" class=\"btn btn-danger\"><i class=\"fas fa-trash\"></i> Eliminar</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { IPedidoActivo } from 'src/app/interfaces/pedidoactivo.interface';\nimport { PedidosService } from 'src/app/services/pedidos.service';\n\n@Component({\n  selector: 'app-public-sidebar-content',\n  templateUrl: './public-sidebar-content.component.html',\n  styleUrls: ['./public-sidebar-content.component.styl']\n})\nexport class PublicSidebarContentComponent implements OnInit {\n\n  intervalo : any;\n  internalSub! : Subscription;\n  datos_pedido : IPedidoActivo[] = [];\n  mesaId: string | null = localStorage.getItem('mesaCheckInLS');\n  totalPedido: number = 0;\n  cargando: boolean = true;\n\n  constructor(private _ps: PedidosService) { }\n\n  // => Funcion que devuelve Observable\n  escucharCambiosPedidos(t:number) {\n    //Retorno el observable de Mesas\n    return new Observable<IPedidoActivo[]>( observer => {\n      //Configuro el intervalo cada 5 segundos\n      this.intervalo = setInterval(()=> {\n        //Ejecuto la consulta a Firebase\n        if(this.mesaId){\n          this._ps.obtenerPedidos(this.mesaId).subscribe(resp => {;\n            observer.next(resp) // => Responso con el observer (a los que esten suscriptos)\n          })\n        }\n      },t);\n    } );\n  }\n\n  ngOnInit(): void {\n\n    //Ejecuto la funcion para escuchar y me suscribo\n    this.internalSub = this.escucharCambiosPedidos(1000).subscribe(data => {\n      //Cada 5 segundos me devuelve la data\n      this.datos_pedido = data;\n\n      this.totalPedido = 0\n\n      this.datos_pedido.forEach(pedido => {\n        this.totalPedido += pedido.precio;\n      })\n\n      this.cargando = false;\n\n    });\n\n  }\n\n}\n","<h2><span class=\"badge bg-info text-white\">Mi pedido</span></h2>\n<hr class=\"bg-white\">\n<div class=\"alert alert-info\" role=\"alert\" *ngIf=\"cargando\">\n    <i class=\"fas fa-spinner fa-spin\"></i> Cargando datos...\n</div>\n<div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!cargando && datos_pedido.length == 0\">\n    No has ordenado nada todavía.\n</div>\n<div class=\"container-pedido\" *ngIf=\"!cargando && datos_pedido.length > 0\">\n    <table class=\"table table-dark table-hover\">\n        <thead>\n            <th>Pedido</th>\n            <th>Estado</th>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let pedido of datos_pedido\">\n                <td>{{pedido.cantidad}} x {{pedido.nombre}}</td>\n                <td>\n                    <span *ngIf=\"pedido.entregado\" class=\"badge bg-success text-white\">Entregado</span>\n                    <span *ngIf=\"!pedido.entregado\" class=\"badge bg-danger text-white\">En espera</span>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<hr *ngIf=\"!cargando && datos_pedido.length > 0\" class=\"bg-white\">\n<h2 *ngIf=\"!cargando && datos_pedido.length > 0\" class=\"text-white text-right\">Total: <span class=\"badge bg-primary text-white\">$ {{totalPedido}}</span></h2>\n<hr *ngIf=\"!cargando && datos_pedido.length > 0\" class=\"bg-white\">\n<button *ngIf=\"!cargando && datos_pedido.length > 0\" class=\"btn btn-block btn-primary\">Pedir la cuenta</button>\n<button *ngIf=\"!cargando && datos_pedido.length == 0\" class=\"btn btn-block btn-danger\">Retirarte de la mesa</button>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}